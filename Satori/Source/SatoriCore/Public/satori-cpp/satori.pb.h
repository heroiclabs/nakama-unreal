// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: satori.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_satori_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_satori_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "google/protobuf/wrappers.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_satori_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_satori_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_satori_2eproto;
namespace satori {
namespace api {
class AuthenticateLogoutRequest;
struct AuthenticateLogoutRequestDefaultTypeInternal;
extern AuthenticateLogoutRequestDefaultTypeInternal _AuthenticateLogoutRequest_default_instance_;
class AuthenticateRefreshRequest;
struct AuthenticateRefreshRequestDefaultTypeInternal;
extern AuthenticateRefreshRequestDefaultTypeInternal _AuthenticateRefreshRequest_default_instance_;
class AuthenticateRequest;
struct AuthenticateRequestDefaultTypeInternal;
extern AuthenticateRequestDefaultTypeInternal _AuthenticateRequest_default_instance_;
class AuthenticateRequest_CustomEntry_DoNotUse;
struct AuthenticateRequest_CustomEntry_DoNotUseDefaultTypeInternal;
extern AuthenticateRequest_CustomEntry_DoNotUseDefaultTypeInternal _AuthenticateRequest_CustomEntry_DoNotUse_default_instance_;
class AuthenticateRequest_DefaultEntry_DoNotUse;
struct AuthenticateRequest_DefaultEntry_DoNotUseDefaultTypeInternal;
extern AuthenticateRequest_DefaultEntry_DoNotUseDefaultTypeInternal _AuthenticateRequest_DefaultEntry_DoNotUse_default_instance_;
class DeleteMessageRequest;
struct DeleteMessageRequestDefaultTypeInternal;
extern DeleteMessageRequestDefaultTypeInternal _DeleteMessageRequest_default_instance_;
class Event;
struct EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class EventRequest;
struct EventRequestDefaultTypeInternal;
extern EventRequestDefaultTypeInternal _EventRequest_default_instance_;
class Event_MetadataEntry_DoNotUse;
struct Event_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Event_MetadataEntry_DoNotUseDefaultTypeInternal _Event_MetadataEntry_DoNotUse_default_instance_;
class Experiment;
struct ExperimentDefaultTypeInternal;
extern ExperimentDefaultTypeInternal _Experiment_default_instance_;
class ExperimentList;
struct ExperimentListDefaultTypeInternal;
extern ExperimentListDefaultTypeInternal _ExperimentList_default_instance_;
class Flag;
struct FlagDefaultTypeInternal;
extern FlagDefaultTypeInternal _Flag_default_instance_;
class FlagList;
struct FlagListDefaultTypeInternal;
extern FlagListDefaultTypeInternal _FlagList_default_instance_;
class GetExperimentsRequest;
struct GetExperimentsRequestDefaultTypeInternal;
extern GetExperimentsRequestDefaultTypeInternal _GetExperimentsRequest_default_instance_;
class GetFlagsRequest;
struct GetFlagsRequestDefaultTypeInternal;
extern GetFlagsRequestDefaultTypeInternal _GetFlagsRequest_default_instance_;
class GetLiveEventsRequest;
struct GetLiveEventsRequestDefaultTypeInternal;
extern GetLiveEventsRequestDefaultTypeInternal _GetLiveEventsRequest_default_instance_;
class GetMessageListRequest;
struct GetMessageListRequestDefaultTypeInternal;
extern GetMessageListRequestDefaultTypeInternal _GetMessageListRequest_default_instance_;
class GetMessageListResponse;
struct GetMessageListResponseDefaultTypeInternal;
extern GetMessageListResponseDefaultTypeInternal _GetMessageListResponse_default_instance_;
class IdentifyRequest;
struct IdentifyRequestDefaultTypeInternal;
extern IdentifyRequestDefaultTypeInternal _IdentifyRequest_default_instance_;
class IdentifyRequest_CustomEntry_DoNotUse;
struct IdentifyRequest_CustomEntry_DoNotUseDefaultTypeInternal;
extern IdentifyRequest_CustomEntry_DoNotUseDefaultTypeInternal _IdentifyRequest_CustomEntry_DoNotUse_default_instance_;
class IdentifyRequest_DefaultEntry_DoNotUse;
struct IdentifyRequest_DefaultEntry_DoNotUseDefaultTypeInternal;
extern IdentifyRequest_DefaultEntry_DoNotUseDefaultTypeInternal _IdentifyRequest_DefaultEntry_DoNotUse_default_instance_;
class LiveEvent;
struct LiveEventDefaultTypeInternal;
extern LiveEventDefaultTypeInternal _LiveEvent_default_instance_;
class LiveEventList;
struct LiveEventListDefaultTypeInternal;
extern LiveEventListDefaultTypeInternal _LiveEventList_default_instance_;
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message_MetadataEntry_DoNotUse;
struct Message_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Message_MetadataEntry_DoNotUseDefaultTypeInternal _Message_MetadataEntry_DoNotUse_default_instance_;
class Properties;
struct PropertiesDefaultTypeInternal;
extern PropertiesDefaultTypeInternal _Properties_default_instance_;
class Properties_ComputedEntry_DoNotUse;
struct Properties_ComputedEntry_DoNotUseDefaultTypeInternal;
extern Properties_ComputedEntry_DoNotUseDefaultTypeInternal _Properties_ComputedEntry_DoNotUse_default_instance_;
class Properties_CustomEntry_DoNotUse;
struct Properties_CustomEntry_DoNotUseDefaultTypeInternal;
extern Properties_CustomEntry_DoNotUseDefaultTypeInternal _Properties_CustomEntry_DoNotUse_default_instance_;
class Properties_DefaultEntry_DoNotUse;
struct Properties_DefaultEntry_DoNotUseDefaultTypeInternal;
extern Properties_DefaultEntry_DoNotUseDefaultTypeInternal _Properties_DefaultEntry_DoNotUse_default_instance_;
class Session;
struct SessionDefaultTypeInternal;
extern SessionDefaultTypeInternal _Session_default_instance_;
class UpdateMessageRequest;
struct UpdateMessageRequestDefaultTypeInternal;
extern UpdateMessageRequestDefaultTypeInternal _UpdateMessageRequest_default_instance_;
class UpdatePropertiesRequest;
struct UpdatePropertiesRequestDefaultTypeInternal;
extern UpdatePropertiesRequestDefaultTypeInternal _UpdatePropertiesRequest_default_instance_;
class UpdatePropertiesRequest_CustomEntry_DoNotUse;
struct UpdatePropertiesRequest_CustomEntry_DoNotUseDefaultTypeInternal;
extern UpdatePropertiesRequest_CustomEntry_DoNotUseDefaultTypeInternal _UpdatePropertiesRequest_CustomEntry_DoNotUse_default_instance_;
class UpdatePropertiesRequest_DefaultEntry_DoNotUse;
struct UpdatePropertiesRequest_DefaultEntry_DoNotUseDefaultTypeInternal;
extern UpdatePropertiesRequest_DefaultEntry_DoNotUseDefaultTypeInternal _UpdatePropertiesRequest_DefaultEntry_DoNotUse_default_instance_;
}  // namespace api
}  // namespace satori
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace satori {
namespace api {

// ===================================================================


// -------------------------------------------------------------------

class UpdatePropertiesRequest_DefaultEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          UpdatePropertiesRequest_DefaultEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      UpdatePropertiesRequest_DefaultEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UpdatePropertiesRequest_DefaultEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdatePropertiesRequest_DefaultEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UpdatePropertiesRequest_DefaultEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UpdatePropertiesRequest_DefaultEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UpdatePropertiesRequest_DefaultEntry_DoNotUse*>(
        &_UpdatePropertiesRequest_DefaultEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class UpdatePropertiesRequest_CustomEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          UpdatePropertiesRequest_CustomEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      UpdatePropertiesRequest_CustomEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UpdatePropertiesRequest_CustomEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdatePropertiesRequest_CustomEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UpdatePropertiesRequest_CustomEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UpdatePropertiesRequest_CustomEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UpdatePropertiesRequest_CustomEntry_DoNotUse*>(
        &_UpdatePropertiesRequest_CustomEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class UpdateMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.UpdateMessageRequest) */ {
 public:
  inline UpdateMessageRequest() : UpdateMessageRequest(nullptr) {}
  ~UpdateMessageRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateMessageRequest(const UpdateMessageRequest& from) : UpdateMessageRequest(nullptr, from) {}
  inline UpdateMessageRequest(UpdateMessageRequest&& from) noexcept
      : UpdateMessageRequest(nullptr, std::move(from)) {}
  inline UpdateMessageRequest& operator=(const UpdateMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateMessageRequest& operator=(UpdateMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateMessageRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateMessageRequest*>(
        &_UpdateMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(UpdateMessageRequest& a, UpdateMessageRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateMessageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateMessageRequest& from) { UpdateMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateMessageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.UpdateMessageRequest"; }

 protected:
  explicit UpdateMessageRequest(::google::protobuf::Arena* arena);
  UpdateMessageRequest(::google::protobuf::Arena* arena, const UpdateMessageRequest& from);
  UpdateMessageRequest(::google::protobuf::Arena* arena, UpdateMessageRequest&& from) noexcept
      : UpdateMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kReadTimeFieldNumber = 2,
    kConsumeTimeFieldNumber = 3,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // int64 read_time = 2;
  void clear_read_time() ;
  ::int64_t read_time() const;
  void set_read_time(::int64_t value);

  private:
  ::int64_t _internal_read_time() const;
  void _internal_set_read_time(::int64_t value);

  public:
  // int64 consume_time = 3;
  void clear_consume_time() ;
  ::int64_t consume_time() const;
  void set_consume_time(::int64_t value);

  private:
  ::int64_t _internal_consume_time() const;
  void _internal_set_consume_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:satori.api.UpdateMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateMessageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::int64_t read_time_;
    ::int64_t consume_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Properties_DefaultEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Properties_DefaultEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Properties_DefaultEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Properties_DefaultEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Properties_DefaultEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Properties_DefaultEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Properties_DefaultEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Properties_DefaultEntry_DoNotUse*>(
        &_Properties_DefaultEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Properties_CustomEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Properties_CustomEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Properties_CustomEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Properties_CustomEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Properties_CustomEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Properties_CustomEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Properties_CustomEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Properties_CustomEntry_DoNotUse*>(
        &_Properties_CustomEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      50, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Properties_ComputedEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Properties_ComputedEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Properties_ComputedEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Properties_ComputedEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Properties_ComputedEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Properties_ComputedEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Properties_ComputedEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Properties_ComputedEntry_DoNotUse*>(
        &_Properties_ComputedEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      52, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Message_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Message_MetadataEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Message_MetadataEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Message_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Message_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Message_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Message_MetadataEntry_DoNotUse*>(
        &_Message_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class LiveEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.LiveEvent) */ {
 public:
  inline LiveEvent() : LiveEvent(nullptr) {}
  ~LiveEvent() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LiveEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline LiveEvent(const LiveEvent& from) : LiveEvent(nullptr, from) {}
  inline LiveEvent(LiveEvent&& from) noexcept
      : LiveEvent(nullptr, std::move(from)) {}
  inline LiveEvent& operator=(const LiveEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline LiveEvent& operator=(LiveEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LiveEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const LiveEvent* internal_default_instance() {
    return reinterpret_cast<const LiveEvent*>(
        &_LiveEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(LiveEvent& a, LiveEvent& b) { a.Swap(&b); }
  inline void Swap(LiveEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LiveEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LiveEvent* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LiveEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LiveEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LiveEvent& from) { LiveEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LiveEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.LiveEvent"; }

 protected:
  explicit LiveEvent(::google::protobuf::Arena* arena);
  LiveEvent(::google::protobuf::Arena* arena, const LiveEvent& from);
  LiveEvent(::google::protobuf::Arena* arena, LiveEvent&& from) noexcept
      : LiveEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kValueFieldNumber = 3,
    kIdFieldNumber = 6,
    kResetCronFieldNumber = 10,
    kActiveStartTimeSecFieldNumber = 4,
    kActiveEndTimeSecFieldNumber = 5,
    kStartTimeSecFieldNumber = 7,
    kEndTimeSecFieldNumber = 8,
    kDurationSecFieldNumber = 9,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string value = 3;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // string id = 6;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string reset_cron = 10;
  void clear_reset_cron() ;
  const std::string& reset_cron() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reset_cron(Arg_&& arg, Args_... args);
  std::string* mutable_reset_cron();
  PROTOBUF_NODISCARD std::string* release_reset_cron();
  void set_allocated_reset_cron(std::string* value);

  private:
  const std::string& _internal_reset_cron() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reset_cron(
      const std::string& value);
  std::string* _internal_mutable_reset_cron();

  public:
  // int64 active_start_time_sec = 4;
  void clear_active_start_time_sec() ;
  ::int64_t active_start_time_sec() const;
  void set_active_start_time_sec(::int64_t value);

  private:
  ::int64_t _internal_active_start_time_sec() const;
  void _internal_set_active_start_time_sec(::int64_t value);

  public:
  // int64 active_end_time_sec = 5;
  void clear_active_end_time_sec() ;
  ::int64_t active_end_time_sec() const;
  void set_active_end_time_sec(::int64_t value);

  private:
  ::int64_t _internal_active_end_time_sec() const;
  void _internal_set_active_end_time_sec(::int64_t value);

  public:
  // int64 start_time_sec = 7;
  void clear_start_time_sec() ;
  ::int64_t start_time_sec() const;
  void set_start_time_sec(::int64_t value);

  private:
  ::int64_t _internal_start_time_sec() const;
  void _internal_set_start_time_sec(::int64_t value);

  public:
  // int64 end_time_sec = 8;
  void clear_end_time_sec() ;
  ::int64_t end_time_sec() const;
  void set_end_time_sec(::int64_t value);

  private:
  ::int64_t _internal_end_time_sec() const;
  void _internal_set_end_time_sec(::int64_t value);

  public:
  // int64 duration_sec = 9;
  void clear_duration_sec() ;
  ::int64_t duration_sec() const;
  void set_duration_sec(::int64_t value);

  private:
  ::int64_t _internal_duration_sec() const;
  void _internal_set_duration_sec(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:satori.api.LiveEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      69, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LiveEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LiveEvent& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr reset_cron_;
    ::int64_t active_start_time_sec_;
    ::int64_t active_end_time_sec_;
    ::int64_t start_time_sec_;
    ::int64_t end_time_sec_;
    ::int64_t duration_sec_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class IdentifyRequest_DefaultEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          IdentifyRequest_DefaultEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      IdentifyRequest_DefaultEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  IdentifyRequest_DefaultEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IdentifyRequest_DefaultEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit IdentifyRequest_DefaultEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const IdentifyRequest_DefaultEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const IdentifyRequest_DefaultEntry_DoNotUse*>(
        &_IdentifyRequest_DefaultEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class IdentifyRequest_CustomEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          IdentifyRequest_CustomEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      IdentifyRequest_CustomEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  IdentifyRequest_CustomEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IdentifyRequest_CustomEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit IdentifyRequest_CustomEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const IdentifyRequest_CustomEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const IdentifyRequest_CustomEntry_DoNotUse*>(
        &_IdentifyRequest_CustomEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class GetMessageListRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.GetMessageListRequest) */ {
 public:
  inline GetMessageListRequest() : GetMessageListRequest(nullptr) {}
  ~GetMessageListRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMessageListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMessageListRequest(const GetMessageListRequest& from) : GetMessageListRequest(nullptr, from) {}
  inline GetMessageListRequest(GetMessageListRequest&& from) noexcept
      : GetMessageListRequest(nullptr, std::move(from)) {}
  inline GetMessageListRequest& operator=(const GetMessageListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMessageListRequest& operator=(GetMessageListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMessageListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMessageListRequest* internal_default_instance() {
    return reinterpret_cast<const GetMessageListRequest*>(
        &_GetMessageListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(GetMessageListRequest& a, GetMessageListRequest& b) { a.Swap(&b); }
  inline void Swap(GetMessageListRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMessageListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMessageListRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetMessageListRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMessageListRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMessageListRequest& from) { GetMessageListRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetMessageListRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.GetMessageListRequest"; }

 protected:
  explicit GetMessageListRequest(::google::protobuf::Arena* arena);
  GetMessageListRequest(::google::protobuf::Arena* arena, const GetMessageListRequest& from);
  GetMessageListRequest(::google::protobuf::Arena* arena, GetMessageListRequest&& from) noexcept
      : GetMessageListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCursorFieldNumber = 3,
    kLimitFieldNumber = 1,
    kForwardFieldNumber = 2,
  };
  // string cursor = 3;
  void clear_cursor() ;
  const std::string& cursor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cursor(Arg_&& arg, Args_... args);
  std::string* mutable_cursor();
  PROTOBUF_NODISCARD std::string* release_cursor();
  void set_allocated_cursor(std::string* value);

  private:
  const std::string& _internal_cursor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cursor(
      const std::string& value);
  std::string* _internal_mutable_cursor();

  public:
  // int32 limit = 1;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // bool forward = 2;
  void clear_forward() ;
  bool forward() const;
  void set_forward(bool value);

  private:
  bool _internal_forward() const;
  void _internal_set_forward(bool value);

  public:
  // @@protoc_insertion_point(class_scope:satori.api.GetMessageListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetMessageListRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMessageListRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr cursor_;
    ::int32_t limit_;
    bool forward_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class GetLiveEventsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.GetLiveEventsRequest) */ {
 public:
  inline GetLiveEventsRequest() : GetLiveEventsRequest(nullptr) {}
  ~GetLiveEventsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLiveEventsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLiveEventsRequest(const GetLiveEventsRequest& from) : GetLiveEventsRequest(nullptr, from) {}
  inline GetLiveEventsRequest(GetLiveEventsRequest&& from) noexcept
      : GetLiveEventsRequest(nullptr, std::move(from)) {}
  inline GetLiveEventsRequest& operator=(const GetLiveEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveEventsRequest& operator=(GetLiveEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveEventsRequest* internal_default_instance() {
    return reinterpret_cast<const GetLiveEventsRequest*>(
        &_GetLiveEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(GetLiveEventsRequest& a, GetLiveEventsRequest& b) { a.Swap(&b); }
  inline void Swap(GetLiveEventsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveEventsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLiveEventsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetLiveEventsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLiveEventsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLiveEventsRequest& from) { GetLiveEventsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLiveEventsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.GetLiveEventsRequest"; }

 protected:
  explicit GetLiveEventsRequest(::google::protobuf::Arena* arena);
  GetLiveEventsRequest(::google::protobuf::Arena* arena, const GetLiveEventsRequest& from);
  GetLiveEventsRequest(::google::protobuf::Arena* arena, GetLiveEventsRequest&& from) noexcept
      : GetLiveEventsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamesFieldNumber = 1,
  };
  // repeated string names = 1;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_names(int index, Arg_&& value, Args_... args);
  std::string* add_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.GetLiveEventsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetLiveEventsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLiveEventsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class GetFlagsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.GetFlagsRequest) */ {
 public:
  inline GetFlagsRequest() : GetFlagsRequest(nullptr) {}
  ~GetFlagsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFlagsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetFlagsRequest(const GetFlagsRequest& from) : GetFlagsRequest(nullptr, from) {}
  inline GetFlagsRequest(GetFlagsRequest&& from) noexcept
      : GetFlagsRequest(nullptr, std::move(from)) {}
  inline GetFlagsRequest& operator=(const GetFlagsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFlagsRequest& operator=(GetFlagsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFlagsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFlagsRequest* internal_default_instance() {
    return reinterpret_cast<const GetFlagsRequest*>(
        &_GetFlagsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(GetFlagsRequest& a, GetFlagsRequest& b) { a.Swap(&b); }
  inline void Swap(GetFlagsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFlagsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFlagsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetFlagsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFlagsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFlagsRequest& from) { GetFlagsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetFlagsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.GetFlagsRequest"; }

 protected:
  explicit GetFlagsRequest(::google::protobuf::Arena* arena);
  GetFlagsRequest(::google::protobuf::Arena* arena, const GetFlagsRequest& from);
  GetFlagsRequest(::google::protobuf::Arena* arena, GetFlagsRequest&& from) noexcept
      : GetFlagsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamesFieldNumber = 1,
  };
  // repeated string names = 1;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_names(int index, Arg_&& value, Args_... args);
  std::string* add_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.GetFlagsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetFlagsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetFlagsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.GetExperimentsRequest) */ {
 public:
  inline GetExperimentsRequest() : GetExperimentsRequest(nullptr) {}
  ~GetExperimentsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetExperimentsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetExperimentsRequest(const GetExperimentsRequest& from) : GetExperimentsRequest(nullptr, from) {}
  inline GetExperimentsRequest(GetExperimentsRequest&& from) noexcept
      : GetExperimentsRequest(nullptr, std::move(from)) {}
  inline GetExperimentsRequest& operator=(const GetExperimentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentsRequest& operator=(GetExperimentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentsRequest* internal_default_instance() {
    return reinterpret_cast<const GetExperimentsRequest*>(
        &_GetExperimentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetExperimentsRequest& a, GetExperimentsRequest& b) { a.Swap(&b); }
  inline void Swap(GetExperimentsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExperimentsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetExperimentsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetExperimentsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetExperimentsRequest& from) { GetExperimentsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetExperimentsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.GetExperimentsRequest"; }

 protected:
  explicit GetExperimentsRequest(::google::protobuf::Arena* arena);
  GetExperimentsRequest(::google::protobuf::Arena* arena, const GetExperimentsRequest& from);
  GetExperimentsRequest(::google::protobuf::Arena* arena, GetExperimentsRequest&& from) noexcept
      : GetExperimentsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamesFieldNumber = 1,
  };
  // repeated string names = 1;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_names(int index, Arg_&& value, Args_... args);
  std::string* add_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.GetExperimentsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetExperimentsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetExperimentsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Flag final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.Flag) */ {
 public:
  inline Flag() : Flag(nullptr) {}
  ~Flag() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Flag(
      ::google::protobuf::internal::ConstantInitialized);

  inline Flag(const Flag& from) : Flag(nullptr, from) {}
  inline Flag(Flag&& from) noexcept
      : Flag(nullptr, std::move(from)) {}
  inline Flag& operator=(const Flag& from) {
    CopyFrom(from);
    return *this;
  }
  inline Flag& operator=(Flag&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Flag& default_instance() {
    return *internal_default_instance();
  }
  static inline const Flag* internal_default_instance() {
    return reinterpret_cast<const Flag*>(
        &_Flag_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Flag& a, Flag& b) { a.Swap(&b); }
  inline void Swap(Flag* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Flag* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Flag* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Flag>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Flag& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Flag& from) { Flag::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Flag* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.Flag"; }

 protected:
  explicit Flag(::google::protobuf::Arena* arena);
  Flag(::google::protobuf::Arena* arena, const Flag& from);
  Flag(::google::protobuf::Arena* arena, Flag&& from) noexcept
      : Flag(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
    kConditionChangedFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // bool condition_changed = 3;
  void clear_condition_changed() ;
  bool condition_changed() const;
  void set_condition_changed(bool value);

  private:
  bool _internal_condition_changed() const;
  void _internal_set_condition_changed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:satori.api.Flag)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Flag_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Flag& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    bool condition_changed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Experiment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.Experiment) */ {
 public:
  inline Experiment() : Experiment(nullptr) {}
  ~Experiment() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Experiment(
      ::google::protobuf::internal::ConstantInitialized);

  inline Experiment(const Experiment& from) : Experiment(nullptr, from) {}
  inline Experiment(Experiment&& from) noexcept
      : Experiment(nullptr, std::move(from)) {}
  inline Experiment& operator=(const Experiment& from) {
    CopyFrom(from);
    return *this;
  }
  inline Experiment& operator=(Experiment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Experiment& default_instance() {
    return *internal_default_instance();
  }
  static inline const Experiment* internal_default_instance() {
    return reinterpret_cast<const Experiment*>(
        &_Experiment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Experiment& a, Experiment& b) { a.Swap(&b); }
  inline void Swap(Experiment* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Experiment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Experiment* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Experiment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Experiment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Experiment& from) { Experiment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Experiment* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.Experiment"; }

 protected:
  explicit Experiment(::google::protobuf::Arena* arena);
  Experiment(::google::protobuf::Arena* arena, const Experiment& from);
  Experiment(::google::protobuf::Arena* arena, Experiment&& from) noexcept
      : Experiment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.Experiment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Experiment_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Experiment& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Event_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Event_MetadataEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Event_MetadataEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Event_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Event_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Event_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Event_MetadataEntry_DoNotUse*>(
        &_Event_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class DeleteMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.DeleteMessageRequest) */ {
 public:
  inline DeleteMessageRequest() : DeleteMessageRequest(nullptr) {}
  ~DeleteMessageRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMessageRequest(const DeleteMessageRequest& from) : DeleteMessageRequest(nullptr, from) {}
  inline DeleteMessageRequest(DeleteMessageRequest&& from) noexcept
      : DeleteMessageRequest(nullptr, std::move(from)) {}
  inline DeleteMessageRequest& operator=(const DeleteMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMessageRequest& operator=(DeleteMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMessageRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteMessageRequest*>(
        &_DeleteMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(DeleteMessageRequest& a, DeleteMessageRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteMessageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteMessageRequest& from) { DeleteMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteMessageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.DeleteMessageRequest"; }

 protected:
  explicit DeleteMessageRequest(::google::protobuf::Arena* arena);
  DeleteMessageRequest(::google::protobuf::Arena* arena, const DeleteMessageRequest& from);
  DeleteMessageRequest(::google::protobuf::Arena* arena, DeleteMessageRequest&& from) noexcept
      : DeleteMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.DeleteMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteMessageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class AuthenticateRequest_DefaultEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          AuthenticateRequest_DefaultEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      AuthenticateRequest_DefaultEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AuthenticateRequest_DefaultEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateRequest_DefaultEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AuthenticateRequest_DefaultEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AuthenticateRequest_DefaultEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AuthenticateRequest_DefaultEntry_DoNotUse*>(
        &_AuthenticateRequest_DefaultEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class AuthenticateRequest_CustomEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          AuthenticateRequest_CustomEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      AuthenticateRequest_CustomEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  AuthenticateRequest_CustomEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateRequest_CustomEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit AuthenticateRequest_CustomEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const AuthenticateRequest_CustomEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const AuthenticateRequest_CustomEntry_DoNotUse*>(
        &_AuthenticateRequest_CustomEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class AuthenticateRefreshRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.AuthenticateRefreshRequest) */ {
 public:
  inline AuthenticateRefreshRequest() : AuthenticateRefreshRequest(nullptr) {}
  ~AuthenticateRefreshRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateRefreshRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticateRefreshRequest(const AuthenticateRefreshRequest& from) : AuthenticateRefreshRequest(nullptr, from) {}
  inline AuthenticateRefreshRequest(AuthenticateRefreshRequest&& from) noexcept
      : AuthenticateRefreshRequest(nullptr, std::move(from)) {}
  inline AuthenticateRefreshRequest& operator=(const AuthenticateRefreshRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticateRefreshRequest& operator=(AuthenticateRefreshRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticateRefreshRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticateRefreshRequest* internal_default_instance() {
    return reinterpret_cast<const AuthenticateRefreshRequest*>(
        &_AuthenticateRefreshRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AuthenticateRefreshRequest& a, AuthenticateRefreshRequest& b) { a.Swap(&b); }
  inline void Swap(AuthenticateRefreshRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticateRefreshRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticateRefreshRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticateRefreshRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticateRefreshRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticateRefreshRequest& from) { AuthenticateRefreshRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticateRefreshRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.AuthenticateRefreshRequest"; }

 protected:
  explicit AuthenticateRefreshRequest(::google::protobuf::Arena* arena);
  AuthenticateRefreshRequest(::google::protobuf::Arena* arena, const AuthenticateRefreshRequest& from);
  AuthenticateRefreshRequest(::google::protobuf::Arena* arena, AuthenticateRefreshRequest&& from) noexcept
      : AuthenticateRefreshRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRefreshTokenFieldNumber = 1,
  };
  // string refresh_token = 1;
  void clear_refresh_token() ;
  const std::string& refresh_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_refresh_token(Arg_&& arg, Args_... args);
  std::string* mutable_refresh_token();
  PROTOBUF_NODISCARD std::string* release_refresh_token();
  void set_allocated_refresh_token(std::string* value);

  private:
  const std::string& _internal_refresh_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_refresh_token(
      const std::string& value);
  std::string* _internal_mutable_refresh_token();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.AuthenticateRefreshRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticateRefreshRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticateRefreshRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr refresh_token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class AuthenticateLogoutRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.AuthenticateLogoutRequest) */ {
 public:
  inline AuthenticateLogoutRequest() : AuthenticateLogoutRequest(nullptr) {}
  ~AuthenticateLogoutRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateLogoutRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticateLogoutRequest(const AuthenticateLogoutRequest& from) : AuthenticateLogoutRequest(nullptr, from) {}
  inline AuthenticateLogoutRequest(AuthenticateLogoutRequest&& from) noexcept
      : AuthenticateLogoutRequest(nullptr, std::move(from)) {}
  inline AuthenticateLogoutRequest& operator=(const AuthenticateLogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticateLogoutRequest& operator=(AuthenticateLogoutRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticateLogoutRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticateLogoutRequest* internal_default_instance() {
    return reinterpret_cast<const AuthenticateLogoutRequest*>(
        &_AuthenticateLogoutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AuthenticateLogoutRequest& a, AuthenticateLogoutRequest& b) { a.Swap(&b); }
  inline void Swap(AuthenticateLogoutRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticateLogoutRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticateLogoutRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticateLogoutRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticateLogoutRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticateLogoutRequest& from) { AuthenticateLogoutRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticateLogoutRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.AuthenticateLogoutRequest"; }

 protected:
  explicit AuthenticateLogoutRequest(::google::protobuf::Arena* arena);
  AuthenticateLogoutRequest(::google::protobuf::Arena* arena, const AuthenticateLogoutRequest& from);
  AuthenticateLogoutRequest(::google::protobuf::Arena* arena, AuthenticateLogoutRequest&& from) noexcept
      : AuthenticateLogoutRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 1,
    kRefreshTokenFieldNumber = 2,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string refresh_token = 2;
  void clear_refresh_token() ;
  const std::string& refresh_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_refresh_token(Arg_&& arg, Args_... args);
  std::string* mutable_refresh_token();
  PROTOBUF_NODISCARD std::string* release_refresh_token();
  void set_allocated_refresh_token(std::string* value);

  private:
  const std::string& _internal_refresh_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_refresh_token(
      const std::string& value);
  std::string* _internal_mutable_refresh_token();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.AuthenticateLogoutRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticateLogoutRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticateLogoutRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr refresh_token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class UpdatePropertiesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.UpdatePropertiesRequest) */ {
 public:
  inline UpdatePropertiesRequest() : UpdatePropertiesRequest(nullptr) {}
  ~UpdatePropertiesRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdatePropertiesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdatePropertiesRequest(const UpdatePropertiesRequest& from) : UpdatePropertiesRequest(nullptr, from) {}
  inline UpdatePropertiesRequest(UpdatePropertiesRequest&& from) noexcept
      : UpdatePropertiesRequest(nullptr, std::move(from)) {}
  inline UpdatePropertiesRequest& operator=(const UpdatePropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePropertiesRequest& operator=(UpdatePropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdatePropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdatePropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const UpdatePropertiesRequest*>(
        &_UpdatePropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(UpdatePropertiesRequest& a, UpdatePropertiesRequest& b) { a.Swap(&b); }
  inline void Swap(UpdatePropertiesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdatePropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdatePropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdatePropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdatePropertiesRequest& from) { UpdatePropertiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdatePropertiesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.UpdatePropertiesRequest"; }

 protected:
  explicit UpdatePropertiesRequest(::google::protobuf::Arena* arena);
  UpdatePropertiesRequest(::google::protobuf::Arena* arena, const UpdatePropertiesRequest& from);
  UpdatePropertiesRequest(::google::protobuf::Arena* arena, UpdatePropertiesRequest&& from) noexcept
      : UpdatePropertiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultFieldNumber = 1,
    kCustomFieldNumber = 2,
    kRecomputeFieldNumber = 3,
  };
  // map<string, string> default = 1;
  int default__size() const;
  private:
  int _internal_default__size() const;

  public:
  void clear_default_() ;
  const ::google::protobuf::Map<std::string, std::string>& default_() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_default_();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_default_() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_default_();

  public:
  // map<string, string> custom = 2;
  int custom_size() const;
  private:
  int _internal_custom_size() const;

  public:
  void clear_custom() ;
  const ::google::protobuf::Map<std::string, std::string>& custom() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_custom();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_custom();

  public:
  // .google.protobuf.BoolValue recompute = 3;
  bool has_recompute() const;
  void clear_recompute() ;
  const ::google::protobuf::BoolValue& recompute() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_recompute();
  ::google::protobuf::BoolValue* mutable_recompute();
  void set_allocated_recompute(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_recompute(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_recompute();

  private:
  const ::google::protobuf::BoolValue& _internal_recompute() const;
  ::google::protobuf::BoolValue* _internal_mutable_recompute();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.UpdatePropertiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdatePropertiesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdatePropertiesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<UpdatePropertiesRequest_DefaultEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        default__;
    ::google::protobuf::internal::MapField<UpdatePropertiesRequest_CustomEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        custom_;
    ::google::protobuf::BoolValue* recompute_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Properties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.Properties) */ {
 public:
  inline Properties() : Properties(nullptr) {}
  ~Properties() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Properties(
      ::google::protobuf::internal::ConstantInitialized);

  inline Properties(const Properties& from) : Properties(nullptr, from) {}
  inline Properties(Properties&& from) noexcept
      : Properties(nullptr, std::move(from)) {}
  inline Properties& operator=(const Properties& from) {
    CopyFrom(from);
    return *this;
  }
  inline Properties& operator=(Properties&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Properties& default_instance() {
    return *internal_default_instance();
  }
  static inline const Properties* internal_default_instance() {
    return reinterpret_cast<const Properties*>(
        &_Properties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(Properties& a, Properties& b) { a.Swap(&b); }
  inline void Swap(Properties* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Properties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Properties* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Properties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Properties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Properties& from) { Properties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Properties* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.Properties"; }

 protected:
  explicit Properties(::google::protobuf::Arena* arena);
  Properties(::google::protobuf::Arena* arena, const Properties& from);
  Properties(::google::protobuf::Arena* arena, Properties&& from) noexcept
      : Properties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultFieldNumber = 1,
    kComputedFieldNumber = 2,
    kCustomFieldNumber = 3,
  };
  // map<string, string> default = 1;
  int default__size() const;
  private:
  int _internal_default__size() const;

  public:
  void clear_default_() ;
  const ::google::protobuf::Map<std::string, std::string>& default_() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_default_();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_default_() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_default_();

  public:
  // map<string, string> computed = 2;
  int computed_size() const;
  private:
  int _internal_computed_size() const;

  public:
  void clear_computed() ;
  const ::google::protobuf::Map<std::string, std::string>& computed() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_computed();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_computed() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_computed();

  public:
  // map<string, string> custom = 3;
  int custom_size() const;
  private:
  int _internal_custom_size() const;

  public:
  void clear_custom() ;
  const ::google::protobuf::Map<std::string, std::string>& custom() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_custom();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_custom();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.Properties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Properties_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Properties& from_msg);
    ::google::protobuf::internal::MapField<Properties_DefaultEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        default__;
    ::google::protobuf::internal::MapField<Properties_ComputedEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        computed_;
    ::google::protobuf::internal::MapField<Properties_CustomEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        custom_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.Message) */ {
 public:
  inline Message() : Message(nullptr) {}
  ~Message() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message(const Message& from) : Message(nullptr, from) {}
  inline Message(Message&& from) noexcept
      : Message(nullptr, std::move(from)) {}
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
        &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(Message& a, Message& b) { a.Swap(&b); }
  inline void Swap(Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message& from) { Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.Message"; }

 protected:
  explicit Message(::google::protobuf::Arena* arena);
  Message(::google::protobuf::Arena* arena, const Message& from);
  Message(::google::protobuf::Arena* arena, Message&& from) noexcept
      : Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 3,
    kScheduleIdFieldNumber = 1,
    kTextFieldNumber = 8,
    kIdFieldNumber = 9,
    kTitleFieldNumber = 10,
    kImageUrlFieldNumber = 11,
    kSendTimeFieldNumber = 2,
    kCreateTimeFieldNumber = 4,
    kUpdateTimeFieldNumber = 5,
    kReadTimeFieldNumber = 6,
    kConsumeTimeFieldNumber = 7,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string schedule_id = 1;
  void clear_schedule_id() ;
  const std::string& schedule_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_schedule_id(Arg_&& arg, Args_... args);
  std::string* mutable_schedule_id();
  PROTOBUF_NODISCARD std::string* release_schedule_id();
  void set_allocated_schedule_id(std::string* value);

  private:
  const std::string& _internal_schedule_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schedule_id(
      const std::string& value);
  std::string* _internal_mutable_schedule_id();

  public:
  // string text = 8;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // string id = 9;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string title = 10;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string image_url = 11;
  void clear_image_url() ;
  const std::string& image_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image_url(Arg_&& arg, Args_... args);
  std::string* mutable_image_url();
  PROTOBUF_NODISCARD std::string* release_image_url();
  void set_allocated_image_url(std::string* value);

  private:
  const std::string& _internal_image_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image_url(
      const std::string& value);
  std::string* _internal_mutable_image_url();

  public:
  // int64 send_time = 2;
  void clear_send_time() ;
  ::int64_t send_time() const;
  void set_send_time(::int64_t value);

  private:
  ::int64_t _internal_send_time() const;
  void _internal_set_send_time(::int64_t value);

  public:
  // int64 create_time = 4;
  void clear_create_time() ;
  ::int64_t create_time() const;
  void set_create_time(::int64_t value);

  private:
  ::int64_t _internal_create_time() const;
  void _internal_set_create_time(::int64_t value);

  public:
  // int64 update_time = 5;
  void clear_update_time() ;
  ::int64_t update_time() const;
  void set_update_time(::int64_t value);

  private:
  ::int64_t _internal_update_time() const;
  void _internal_set_update_time(::int64_t value);

  public:
  // int64 read_time = 6;
  void clear_read_time() ;
  ::int64_t read_time() const;
  void set_read_time(::int64_t value);

  private:
  ::int64_t _internal_read_time() const;
  void _internal_set_read_time(::int64_t value);

  public:
  // int64 consume_time = 7;
  void clear_consume_time() ;
  ::int64_t consume_time() const;
  void set_consume_time(::int64_t value);

  private:
  ::int64_t _internal_consume_time() const;
  void _internal_set_consume_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:satori.api.Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 1,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Message& from_msg);
    ::google::protobuf::internal::MapField<Message_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr schedule_id_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr image_url_;
    ::int64_t send_time_;
    ::int64_t create_time_;
    ::int64_t update_time_;
    ::int64_t read_time_;
    ::int64_t consume_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class LiveEventList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.LiveEventList) */ {
 public:
  inline LiveEventList() : LiveEventList(nullptr) {}
  ~LiveEventList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LiveEventList(
      ::google::protobuf::internal::ConstantInitialized);

  inline LiveEventList(const LiveEventList& from) : LiveEventList(nullptr, from) {}
  inline LiveEventList(LiveEventList&& from) noexcept
      : LiveEventList(nullptr, std::move(from)) {}
  inline LiveEventList& operator=(const LiveEventList& from) {
    CopyFrom(from);
    return *this;
  }
  inline LiveEventList& operator=(LiveEventList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LiveEventList& default_instance() {
    return *internal_default_instance();
  }
  static inline const LiveEventList* internal_default_instance() {
    return reinterpret_cast<const LiveEventList*>(
        &_LiveEventList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(LiveEventList& a, LiveEventList& b) { a.Swap(&b); }
  inline void Swap(LiveEventList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LiveEventList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LiveEventList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LiveEventList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LiveEventList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LiveEventList& from) { LiveEventList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LiveEventList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.LiveEventList"; }

 protected:
  explicit LiveEventList(::google::protobuf::Arena* arena);
  LiveEventList(::google::protobuf::Arena* arena, const LiveEventList& from);
  LiveEventList(::google::protobuf::Arena* arena, LiveEventList&& from) noexcept
      : LiveEventList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLiveEventsFieldNumber = 1,
  };
  // repeated .satori.api.LiveEvent live_events = 1;
  int live_events_size() const;
  private:
  int _internal_live_events_size() const;

  public:
  void clear_live_events() ;
  ::satori::api::LiveEvent* mutable_live_events(int index);
  ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>* mutable_live_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>& _internal_live_events() const;
  ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>* _internal_mutable_live_events();
  public:
  const ::satori::api::LiveEvent& live_events(int index) const;
  ::satori::api::LiveEvent* add_live_events();
  const ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>& live_events() const;
  // @@protoc_insertion_point(class_scope:satori.api.LiveEventList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LiveEventList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LiveEventList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::satori::api::LiveEvent > live_events_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class IdentifyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.IdentifyRequest) */ {
 public:
  inline IdentifyRequest() : IdentifyRequest(nullptr) {}
  ~IdentifyRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IdentifyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline IdentifyRequest(const IdentifyRequest& from) : IdentifyRequest(nullptr, from) {}
  inline IdentifyRequest(IdentifyRequest&& from) noexcept
      : IdentifyRequest(nullptr, std::move(from)) {}
  inline IdentifyRequest& operator=(const IdentifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentifyRequest& operator=(IdentifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdentifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentifyRequest* internal_default_instance() {
    return reinterpret_cast<const IdentifyRequest*>(
        &_IdentifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(IdentifyRequest& a, IdentifyRequest& b) { a.Swap(&b); }
  inline void Swap(IdentifyRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdentifyRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<IdentifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IdentifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IdentifyRequest& from) { IdentifyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IdentifyRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.IdentifyRequest"; }

 protected:
  explicit IdentifyRequest(::google::protobuf::Arena* arena);
  IdentifyRequest(::google::protobuf::Arena* arena, const IdentifyRequest& from);
  IdentifyRequest(::google::protobuf::Arena* arena, IdentifyRequest&& from) noexcept
      : IdentifyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultFieldNumber = 2,
    kCustomFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // map<string, string> default = 2;
  int default__size() const;
  private:
  int _internal_default__size() const;

  public:
  void clear_default_() ;
  const ::google::protobuf::Map<std::string, std::string>& default_() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_default_();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_default_() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_default_();

  public:
  // map<string, string> custom = 3;
  int custom_size() const;
  private:
  int _internal_custom_size() const;

  public:
  void clear_custom() ;
  const ::google::protobuf::Map<std::string, std::string>& custom() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_custom();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_custom();

  public:
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.IdentifyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 2,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IdentifyRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IdentifyRequest& from_msg);
    ::google::protobuf::internal::MapField<IdentifyRequest_DefaultEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        default__;
    ::google::protobuf::internal::MapField<IdentifyRequest_CustomEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        custom_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class FlagList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.FlagList) */ {
 public:
  inline FlagList() : FlagList(nullptr) {}
  ~FlagList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlagList(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlagList(const FlagList& from) : FlagList(nullptr, from) {}
  inline FlagList(FlagList&& from) noexcept
      : FlagList(nullptr, std::move(from)) {}
  inline FlagList& operator=(const FlagList& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlagList& operator=(FlagList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlagList& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlagList* internal_default_instance() {
    return reinterpret_cast<const FlagList*>(
        &_FlagList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(FlagList& a, FlagList& b) { a.Swap(&b); }
  inline void Swap(FlagList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlagList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlagList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FlagList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlagList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlagList& from) { FlagList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FlagList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.FlagList"; }

 protected:
  explicit FlagList(::google::protobuf::Arena* arena);
  FlagList(::google::protobuf::Arena* arena, const FlagList& from);
  FlagList(::google::protobuf::Arena* arena, FlagList&& from) noexcept
      : FlagList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlagsFieldNumber = 1,
  };
  // repeated .satori.api.Flag flags = 1;
  int flags_size() const;
  private:
  int _internal_flags_size() const;

  public:
  void clear_flags() ;
  ::satori::api::Flag* mutable_flags(int index);
  ::google::protobuf::RepeatedPtrField<::satori::api::Flag>* mutable_flags();

  private:
  const ::google::protobuf::RepeatedPtrField<::satori::api::Flag>& _internal_flags() const;
  ::google::protobuf::RepeatedPtrField<::satori::api::Flag>* _internal_mutable_flags();
  public:
  const ::satori::api::Flag& flags(int index) const;
  ::satori::api::Flag* add_flags();
  const ::google::protobuf::RepeatedPtrField<::satori::api::Flag>& flags() const;
  // @@protoc_insertion_point(class_scope:satori.api.FlagList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FlagList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlagList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::satori::api::Flag > flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class ExperimentList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.ExperimentList) */ {
 public:
  inline ExperimentList() : ExperimentList(nullptr) {}
  ~ExperimentList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExperimentList(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExperimentList(const ExperimentList& from) : ExperimentList(nullptr, from) {}
  inline ExperimentList(ExperimentList&& from) noexcept
      : ExperimentList(nullptr, std::move(from)) {}
  inline ExperimentList& operator=(const ExperimentList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExperimentList& operator=(ExperimentList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExperimentList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExperimentList* internal_default_instance() {
    return reinterpret_cast<const ExperimentList*>(
        &_ExperimentList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ExperimentList& a, ExperimentList& b) { a.Swap(&b); }
  inline void Swap(ExperimentList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExperimentList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExperimentList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ExperimentList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExperimentList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExperimentList& from) { ExperimentList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExperimentList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.ExperimentList"; }

 protected:
  explicit ExperimentList(::google::protobuf::Arena* arena);
  ExperimentList(::google::protobuf::Arena* arena, const ExperimentList& from);
  ExperimentList(::google::protobuf::Arena* arena, ExperimentList&& from) noexcept
      : ExperimentList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExperimentsFieldNumber = 1,
  };
  // repeated .satori.api.Experiment experiments = 1;
  int experiments_size() const;
  private:
  int _internal_experiments_size() const;

  public:
  void clear_experiments() ;
  ::satori::api::Experiment* mutable_experiments(int index);
  ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>* mutable_experiments();

  private:
  const ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>& _internal_experiments() const;
  ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>* _internal_mutable_experiments();
  public:
  const ::satori::api::Experiment& experiments(int index) const;
  ::satori::api::Experiment* add_experiments();
  const ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>& experiments() const;
  // @@protoc_insertion_point(class_scope:satori.api.ExperimentList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExperimentList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExperimentList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::satori::api::Experiment > experiments_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Event final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.Event) */ {
 public:
  inline Event() : Event(nullptr) {}
  ~Event() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Event(
      ::google::protobuf::internal::ConstantInitialized);

  inline Event(const Event& from) : Event(nullptr, from) {}
  inline Event(Event&& from) noexcept
      : Event(nullptr, std::move(from)) {}
  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event& operator=(Event&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event& default_instance() {
    return *internal_default_instance();
  }
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
        &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Event& a, Event& b) { a.Swap(&b); }
  inline void Swap(Event* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Event>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Event& from) { Event::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Event* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.Event"; }

 protected:
  explicit Event(::google::protobuf::Arena* arena);
  Event(::google::protobuf::Arena* arena, const Event& from);
  Event(::google::protobuf::Arena* arena, Event&& from) noexcept
      : Event(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 3,
    kNameFieldNumber = 1,
    kIdFieldNumber = 2,
    kValueFieldNumber = 4,
    kTimestampFieldNumber = 5,
  };
  // map<string, string> metadata = 3;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string id = 2;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string value = 4;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // .google.protobuf.Timestamp timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.Event)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Event_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Event& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Event_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::Timestamp* timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class AuthenticateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.AuthenticateRequest) */ {
 public:
  inline AuthenticateRequest() : AuthenticateRequest(nullptr) {}
  ~AuthenticateRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticateRequest(const AuthenticateRequest& from) : AuthenticateRequest(nullptr, from) {}
  inline AuthenticateRequest(AuthenticateRequest&& from) noexcept
      : AuthenticateRequest(nullptr, std::move(from)) {}
  inline AuthenticateRequest& operator=(const AuthenticateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticateRequest& operator=(AuthenticateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticateRequest* internal_default_instance() {
    return reinterpret_cast<const AuthenticateRequest*>(
        &_AuthenticateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AuthenticateRequest& a, AuthenticateRequest& b) { a.Swap(&b); }
  inline void Swap(AuthenticateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticateRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticateRequest& from) { AuthenticateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.AuthenticateRequest"; }

 protected:
  explicit AuthenticateRequest(::google::protobuf::Arena* arena);
  AuthenticateRequest(::google::protobuf::Arena* arena, const AuthenticateRequest& from);
  AuthenticateRequest(::google::protobuf::Arena* arena, AuthenticateRequest&& from) noexcept
      : AuthenticateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultFieldNumber = 2,
    kCustomFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // map<string, string> default = 2;
  int default__size() const;
  private:
  int _internal_default__size() const;

  public:
  void clear_default_() ;
  const ::google::protobuf::Map<std::string, std::string>& default_() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_default_();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_default_() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_default_();

  public:
  // map<string, string> custom = 3;
  int custom_size() const;
  private:
  int _internal_custom_size() const;

  public:
  void clear_custom() ;
  const ::google::protobuf::Map<std::string, std::string>& custom() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_custom();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_custom();

  public:
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.AuthenticateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 2,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticateRequest& from_msg);
    ::google::protobuf::internal::MapField<AuthenticateRequest_DefaultEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        default__;
    ::google::protobuf::internal::MapField<AuthenticateRequest_CustomEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        custom_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class Session final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.Session) */ {
 public:
  inline Session() : Session(nullptr) {}
  ~Session() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Session(
      ::google::protobuf::internal::ConstantInitialized);

  inline Session(const Session& from) : Session(nullptr, from) {}
  inline Session(Session&& from) noexcept
      : Session(nullptr, std::move(from)) {}
  inline Session& operator=(const Session& from) {
    CopyFrom(from);
    return *this;
  }
  inline Session& operator=(Session&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Session& default_instance() {
    return *internal_default_instance();
  }
  static inline const Session* internal_default_instance() {
    return reinterpret_cast<const Session*>(
        &_Session_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(Session& a, Session& b) { a.Swap(&b); }
  inline void Swap(Session* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Session* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Session* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Session>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Session& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Session& from) { Session::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Session* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.Session"; }

 protected:
  explicit Session(::google::protobuf::Arena* arena);
  Session(::google::protobuf::Arena* arena, const Session& from);
  Session(::google::protobuf::Arena* arena, Session&& from) noexcept
      : Session(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 1,
    kRefreshTokenFieldNumber = 2,
    kPropertiesFieldNumber = 3,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string refresh_token = 2;
  void clear_refresh_token() ;
  const std::string& refresh_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_refresh_token(Arg_&& arg, Args_... args);
  std::string* mutable_refresh_token();
  PROTOBUF_NODISCARD std::string* release_refresh_token();
  void set_allocated_refresh_token(std::string* value);

  private:
  const std::string& _internal_refresh_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_refresh_token(
      const std::string& value);
  std::string* _internal_mutable_refresh_token();

  public:
  // .satori.api.Properties properties = 3;
  bool has_properties() const;
  void clear_properties() ;
  const ::satori::api::Properties& properties() const;
  PROTOBUF_NODISCARD ::satori::api::Properties* release_properties();
  ::satori::api::Properties* mutable_properties();
  void set_allocated_properties(::satori::api::Properties* value);
  void unsafe_arena_set_allocated_properties(::satori::api::Properties* value);
  ::satori::api::Properties* unsafe_arena_release_properties();

  private:
  const ::satori::api::Properties& _internal_properties() const;
  ::satori::api::Properties* _internal_mutable_properties();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.Session)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Session_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Session& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr refresh_token_;
    ::satori::api::Properties* properties_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class GetMessageListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.GetMessageListResponse) */ {
 public:
  inline GetMessageListResponse() : GetMessageListResponse(nullptr) {}
  ~GetMessageListResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMessageListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMessageListResponse(const GetMessageListResponse& from) : GetMessageListResponse(nullptr, from) {}
  inline GetMessageListResponse(GetMessageListResponse&& from) noexcept
      : GetMessageListResponse(nullptr, std::move(from)) {}
  inline GetMessageListResponse& operator=(const GetMessageListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMessageListResponse& operator=(GetMessageListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMessageListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMessageListResponse* internal_default_instance() {
    return reinterpret_cast<const GetMessageListResponse*>(
        &_GetMessageListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(GetMessageListResponse& a, GetMessageListResponse& b) { a.Swap(&b); }
  inline void Swap(GetMessageListResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMessageListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMessageListResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetMessageListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMessageListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMessageListResponse& from) { GetMessageListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetMessageListResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.GetMessageListResponse"; }

 protected:
  explicit GetMessageListResponse(::google::protobuf::Arena* arena);
  GetMessageListResponse(::google::protobuf::Arena* arena, const GetMessageListResponse& from);
  GetMessageListResponse(::google::protobuf::Arena* arena, GetMessageListResponse&& from) noexcept
      : GetMessageListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 1,
    kNextCursorFieldNumber = 2,
    kPrevCursorFieldNumber = 3,
    kCacheableCursorFieldNumber = 4,
  };
  // repeated .satori.api.Message messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::satori::api::Message* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::satori::api::Message>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::satori::api::Message>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::satori::api::Message>* _internal_mutable_messages();
  public:
  const ::satori::api::Message& messages(int index) const;
  ::satori::api::Message* add_messages();
  const ::google::protobuf::RepeatedPtrField<::satori::api::Message>& messages() const;
  // string next_cursor = 2;
  void clear_next_cursor() ;
  const std::string& next_cursor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_cursor(Arg_&& arg, Args_... args);
  std::string* mutable_next_cursor();
  PROTOBUF_NODISCARD std::string* release_next_cursor();
  void set_allocated_next_cursor(std::string* value);

  private:
  const std::string& _internal_next_cursor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_cursor(
      const std::string& value);
  std::string* _internal_mutable_next_cursor();

  public:
  // string prev_cursor = 3;
  void clear_prev_cursor() ;
  const std::string& prev_cursor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prev_cursor(Arg_&& arg, Args_... args);
  std::string* mutable_prev_cursor();
  PROTOBUF_NODISCARD std::string* release_prev_cursor();
  void set_allocated_prev_cursor(std::string* value);

  private:
  const std::string& _internal_prev_cursor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prev_cursor(
      const std::string& value);
  std::string* _internal_mutable_prev_cursor();

  public:
  // string cacheable_cursor = 4;
  void clear_cacheable_cursor() ;
  const std::string& cacheable_cursor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cacheable_cursor(Arg_&& arg, Args_... args);
  std::string* mutable_cacheable_cursor();
  PROTOBUF_NODISCARD std::string* release_cacheable_cursor();
  void set_allocated_cacheable_cursor(std::string* value);

  private:
  const std::string& _internal_cacheable_cursor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cacheable_cursor(
      const std::string& value);
  std::string* _internal_mutable_cacheable_cursor();

  public:
  // @@protoc_insertion_point(class_scope:satori.api.GetMessageListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      80, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetMessageListResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMessageListResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::satori::api::Message > messages_;
    ::google::protobuf::internal::ArenaStringPtr next_cursor_;
    ::google::protobuf::internal::ArenaStringPtr prev_cursor_;
    ::google::protobuf::internal::ArenaStringPtr cacheable_cursor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};
// -------------------------------------------------------------------

class EventRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:satori.api.EventRequest) */ {
 public:
  inline EventRequest() : EventRequest(nullptr) {}
  ~EventRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventRequest(const EventRequest& from) : EventRequest(nullptr, from) {}
  inline EventRequest(EventRequest&& from) noexcept
      : EventRequest(nullptr, std::move(from)) {}
  inline EventRequest& operator=(const EventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventRequest& operator=(EventRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventRequest* internal_default_instance() {
    return reinterpret_cast<const EventRequest*>(
        &_EventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(EventRequest& a, EventRequest& b) { a.Swap(&b); }
  inline void Swap(EventRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EventRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventRequest& from) { EventRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EventRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "satori.api.EventRequest"; }

 protected:
  explicit EventRequest(::google::protobuf::Arena* arena);
  EventRequest(::google::protobuf::Arena* arena, const EventRequest& from);
  EventRequest(::google::protobuf::Arena* arena, EventRequest&& from) noexcept
      : EventRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .satori.api.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::satori::api::Event* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField<::satori::api::Event>* mutable_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::satori::api::Event>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::satori::api::Event>* _internal_mutable_events();
  public:
  const ::satori::api::Event& events(int index) const;
  ::satori::api::Event* add_events();
  const ::google::protobuf::RepeatedPtrField<::satori::api::Event>& events() const;
  // @@protoc_insertion_point(class_scope:satori.api.EventRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EventRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::satori::api::Event > events_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_satori_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AuthenticateLogoutRequest

// string token = 1;
inline void AuthenticateLogoutRequest::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& AuthenticateLogoutRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.AuthenticateLogoutRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateLogoutRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.AuthenticateLogoutRequest.token)
}
inline std::string* AuthenticateLogoutRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:satori.api.AuthenticateLogoutRequest.token)
  return _s;
}
inline const std::string& AuthenticateLogoutRequest::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void AuthenticateLogoutRequest::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* AuthenticateLogoutRequest::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* AuthenticateLogoutRequest::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.AuthenticateLogoutRequest.token)
  return _impl_.token_.Release();
}
inline void AuthenticateLogoutRequest::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.AuthenticateLogoutRequest.token)
}

// string refresh_token = 2;
inline void AuthenticateLogoutRequest::clear_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.ClearToEmpty();
}
inline const std::string& AuthenticateLogoutRequest::refresh_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.AuthenticateLogoutRequest.refresh_token)
  return _internal_refresh_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateLogoutRequest::set_refresh_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.AuthenticateLogoutRequest.refresh_token)
}
inline std::string* AuthenticateLogoutRequest::mutable_refresh_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_refresh_token();
  // @@protoc_insertion_point(field_mutable:satori.api.AuthenticateLogoutRequest.refresh_token)
  return _s;
}
inline const std::string& AuthenticateLogoutRequest::_internal_refresh_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refresh_token_.Get();
}
inline void AuthenticateLogoutRequest::_internal_set_refresh_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.Set(value, GetArena());
}
inline std::string* AuthenticateLogoutRequest::_internal_mutable_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.refresh_token_.Mutable( GetArena());
}
inline std::string* AuthenticateLogoutRequest::release_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.AuthenticateLogoutRequest.refresh_token)
  return _impl_.refresh_token_.Release();
}
inline void AuthenticateLogoutRequest::set_allocated_refresh_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.refresh_token_.IsDefault()) {
          _impl_.refresh_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.AuthenticateLogoutRequest.refresh_token)
}

// -------------------------------------------------------------------

// AuthenticateRefreshRequest

// string refresh_token = 1;
inline void AuthenticateRefreshRequest::clear_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.ClearToEmpty();
}
inline const std::string& AuthenticateRefreshRequest::refresh_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.AuthenticateRefreshRequest.refresh_token)
  return _internal_refresh_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateRefreshRequest::set_refresh_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.AuthenticateRefreshRequest.refresh_token)
}
inline std::string* AuthenticateRefreshRequest::mutable_refresh_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_refresh_token();
  // @@protoc_insertion_point(field_mutable:satori.api.AuthenticateRefreshRequest.refresh_token)
  return _s;
}
inline const std::string& AuthenticateRefreshRequest::_internal_refresh_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refresh_token_.Get();
}
inline void AuthenticateRefreshRequest::_internal_set_refresh_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.Set(value, GetArena());
}
inline std::string* AuthenticateRefreshRequest::_internal_mutable_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.refresh_token_.Mutable( GetArena());
}
inline std::string* AuthenticateRefreshRequest::release_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.AuthenticateRefreshRequest.refresh_token)
  return _impl_.refresh_token_.Release();
}
inline void AuthenticateRefreshRequest::set_allocated_refresh_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.refresh_token_.IsDefault()) {
          _impl_.refresh_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.AuthenticateRefreshRequest.refresh_token)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AuthenticateRequest

// string id = 1;
inline void AuthenticateRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& AuthenticateRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.AuthenticateRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.AuthenticateRequest.id)
}
inline std::string* AuthenticateRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.AuthenticateRequest.id)
  return _s;
}
inline const std::string& AuthenticateRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void AuthenticateRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* AuthenticateRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* AuthenticateRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.AuthenticateRequest.id)
  return _impl_.id_.Release();
}
inline void AuthenticateRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.AuthenticateRequest.id)
}

// map<string, string> default = 2;
inline int AuthenticateRequest::_internal_default__size() const {
  return _internal_default_().size();
}
inline int AuthenticateRequest::default__size() const {
  return _internal_default__size();
}
inline void AuthenticateRequest::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AuthenticateRequest::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default__.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AuthenticateRequest::default_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.AuthenticateRequest.default)
  return _internal_default_();
}
inline ::google::protobuf::Map<std::string, std::string>* AuthenticateRequest::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default__.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AuthenticateRequest::mutable_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.AuthenticateRequest.default)
  return _internal_mutable_default_();
}

// map<string, string> custom = 3;
inline int AuthenticateRequest::_internal_custom_size() const {
  return _internal_custom().size();
}
inline int AuthenticateRequest::custom_size() const {
  return _internal_custom_size();
}
inline void AuthenticateRequest::clear_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& AuthenticateRequest::_internal_custom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& AuthenticateRequest::custom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.AuthenticateRequest.custom)
  return _internal_custom();
}
inline ::google::protobuf::Map<std::string, std::string>* AuthenticateRequest::_internal_mutable_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* AuthenticateRequest::mutable_custom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.AuthenticateRequest.custom)
  return _internal_mutable_custom();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Event

// string name = 1;
inline void Event::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Event::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Event.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Event.name)
}
inline std::string* Event::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:satori.api.Event.name)
  return _s;
}
inline const std::string& Event::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Event::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Event::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Event::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Event.name)
  return _impl_.name_.Release();
}
inline void Event::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Event.name)
}

// string id = 2;
inline void Event::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Event::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Event.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Event.id)
}
inline std::string* Event::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.Event.id)
  return _s;
}
inline const std::string& Event::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Event::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Event::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Event::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Event.id)
  return _impl_.id_.Release();
}
inline void Event::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Event.id)
}

// map<string, string> metadata = 3;
inline int Event::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Event::metadata_size() const {
  return _internal_metadata_size();
}
inline void Event::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Event::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Event::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.Event.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Event::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Event::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.Event.metadata)
  return _internal_mutable_metadata();
}

// string value = 4;
inline void Event::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Event::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Event.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Event.value)
}
inline std::string* Event::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:satori.api.Event.value)
  return _s;
}
inline const std::string& Event::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Event::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Event::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Event::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Event.value)
  return _impl_.value_.Release();
}
inline void Event::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Event.value)
}

// .google.protobuf.Timestamp timestamp = 5;
inline bool Event::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Event::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Event::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Event.timestamp)
  return _internal_timestamp();
}
inline void Event::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:satori.api.Event.timestamp)
}
inline ::google::protobuf::Timestamp* Event::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Event::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Event.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Event::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* Event::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:satori.api.Event.timestamp)
  return _msg;
}
inline void Event::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:satori.api.Event.timestamp)
}

// -------------------------------------------------------------------

// EventRequest

// repeated .satori.api.Event events = 1;
inline int EventRequest::_internal_events_size() const {
  return _internal_events().size();
}
inline int EventRequest::events_size() const {
  return _internal_events_size();
}
inline void EventRequest::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
inline ::satori::api::Event* EventRequest::mutable_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.EventRequest.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Event>* EventRequest::mutable_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.EventRequest.events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_events();
}
inline const ::satori::api::Event& EventRequest::events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.EventRequest.events)
  return _internal_events().Get(index);
}
inline ::satori::api::Event* EventRequest::add_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::satori::api::Event* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:satori.api.EventRequest.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Event>& EventRequest::events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.EventRequest.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Event>&
EventRequest::_internal_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Event>*
EventRequest::_internal_mutable_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.events_;
}

// -------------------------------------------------------------------

// Experiment

// string name = 1;
inline void Experiment::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Experiment::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Experiment.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Experiment::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Experiment.name)
}
inline std::string* Experiment::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:satori.api.Experiment.name)
  return _s;
}
inline const std::string& Experiment::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Experiment::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Experiment::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Experiment::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Experiment.name)
  return _impl_.name_.Release();
}
inline void Experiment::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Experiment.name)
}

// string value = 2;
inline void Experiment::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Experiment::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Experiment.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Experiment::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Experiment.value)
}
inline std::string* Experiment::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:satori.api.Experiment.value)
  return _s;
}
inline const std::string& Experiment::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Experiment::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Experiment::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Experiment::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Experiment.value)
  return _impl_.value_.Release();
}
inline void Experiment::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Experiment.value)
}

// -------------------------------------------------------------------

// ExperimentList

// repeated .satori.api.Experiment experiments = 1;
inline int ExperimentList::_internal_experiments_size() const {
  return _internal_experiments().size();
}
inline int ExperimentList::experiments_size() const {
  return _internal_experiments_size();
}
inline void ExperimentList::clear_experiments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.experiments_.Clear();
}
inline ::satori::api::Experiment* ExperimentList::mutable_experiments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.ExperimentList.experiments)
  return _internal_mutable_experiments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>* ExperimentList::mutable_experiments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.ExperimentList.experiments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_experiments();
}
inline const ::satori::api::Experiment& ExperimentList::experiments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.ExperimentList.experiments)
  return _internal_experiments().Get(index);
}
inline ::satori::api::Experiment* ExperimentList::add_experiments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::satori::api::Experiment* _add = _internal_mutable_experiments()->Add();
  // @@protoc_insertion_point(field_add:satori.api.ExperimentList.experiments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>& ExperimentList::experiments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.ExperimentList.experiments)
  return _internal_experiments();
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>&
ExperimentList::_internal_experiments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.experiments_;
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Experiment>*
ExperimentList::_internal_mutable_experiments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.experiments_;
}

// -------------------------------------------------------------------

// Flag

// string name = 1;
inline void Flag::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Flag::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Flag.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Flag::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Flag.name)
}
inline std::string* Flag::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:satori.api.Flag.name)
  return _s;
}
inline const std::string& Flag::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Flag::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Flag::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Flag::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Flag.name)
  return _impl_.name_.Release();
}
inline void Flag::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Flag.name)
}

// string value = 2;
inline void Flag::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Flag::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Flag.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Flag::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Flag.value)
}
inline std::string* Flag::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:satori.api.Flag.value)
  return _s;
}
inline const std::string& Flag::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Flag::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Flag::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Flag::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Flag.value)
  return _impl_.value_.Release();
}
inline void Flag::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Flag.value)
}

// bool condition_changed = 3;
inline void Flag::clear_condition_changed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_changed_ = false;
}
inline bool Flag::condition_changed() const {
  // @@protoc_insertion_point(field_get:satori.api.Flag.condition_changed)
  return _internal_condition_changed();
}
inline void Flag::set_condition_changed(bool value) {
  _internal_set_condition_changed(value);
  // @@protoc_insertion_point(field_set:satori.api.Flag.condition_changed)
}
inline bool Flag::_internal_condition_changed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_changed_;
}
inline void Flag::_internal_set_condition_changed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_changed_ = value;
}

// -------------------------------------------------------------------

// FlagList

// repeated .satori.api.Flag flags = 1;
inline int FlagList::_internal_flags_size() const {
  return _internal_flags().size();
}
inline int FlagList::flags_size() const {
  return _internal_flags_size();
}
inline void FlagList::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_.Clear();
}
inline ::satori::api::Flag* FlagList::mutable_flags(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.FlagList.flags)
  return _internal_mutable_flags()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Flag>* FlagList::mutable_flags()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.FlagList.flags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_flags();
}
inline const ::satori::api::Flag& FlagList::flags(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.FlagList.flags)
  return _internal_flags().Get(index);
}
inline ::satori::api::Flag* FlagList::add_flags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::satori::api::Flag* _add = _internal_mutable_flags()->Add();
  // @@protoc_insertion_point(field_add:satori.api.FlagList.flags)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Flag>& FlagList::flags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.FlagList.flags)
  return _internal_flags();
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Flag>&
FlagList::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Flag>*
FlagList::_internal_mutable_flags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.flags_;
}

// -------------------------------------------------------------------

// GetExperimentsRequest

// repeated string names = 1;
inline int GetExperimentsRequest::_internal_names_size() const {
  return _internal_names().size();
}
inline int GetExperimentsRequest::names_size() const {
  return _internal_names_size();
}
inline void GetExperimentsRequest::clear_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.names_.Clear();
}
inline std::string* GetExperimentsRequest::add_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:satori.api.GetExperimentsRequest.names)
  return _s;
}
inline const std::string& GetExperimentsRequest::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetExperimentsRequest.names)
  return _internal_names().Get(index);
}
inline std::string* GetExperimentsRequest::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.GetExperimentsRequest.names)
  return _internal_mutable_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetExperimentsRequest::set_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:satori.api.GetExperimentsRequest.names)
}
template <typename Arg_, typename... Args_>
inline void GetExperimentsRequest::add_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:satori.api.GetExperimentsRequest.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetExperimentsRequest::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.GetExperimentsRequest.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetExperimentsRequest::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.GetExperimentsRequest.names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetExperimentsRequest::_internal_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetExperimentsRequest::_internal_mutable_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// GetFlagsRequest

// repeated string names = 1;
inline int GetFlagsRequest::_internal_names_size() const {
  return _internal_names().size();
}
inline int GetFlagsRequest::names_size() const {
  return _internal_names_size();
}
inline void GetFlagsRequest::clear_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.names_.Clear();
}
inline std::string* GetFlagsRequest::add_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:satori.api.GetFlagsRequest.names)
  return _s;
}
inline const std::string& GetFlagsRequest::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetFlagsRequest.names)
  return _internal_names().Get(index);
}
inline std::string* GetFlagsRequest::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.GetFlagsRequest.names)
  return _internal_mutable_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetFlagsRequest::set_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:satori.api.GetFlagsRequest.names)
}
template <typename Arg_, typename... Args_>
inline void GetFlagsRequest::add_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:satori.api.GetFlagsRequest.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetFlagsRequest::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.GetFlagsRequest.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetFlagsRequest::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.GetFlagsRequest.names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetFlagsRequest::_internal_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetFlagsRequest::_internal_mutable_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// GetLiveEventsRequest

// repeated string names = 1;
inline int GetLiveEventsRequest::_internal_names_size() const {
  return _internal_names().size();
}
inline int GetLiveEventsRequest::names_size() const {
  return _internal_names_size();
}
inline void GetLiveEventsRequest::clear_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.names_.Clear();
}
inline std::string* GetLiveEventsRequest::add_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:satori.api.GetLiveEventsRequest.names)
  return _s;
}
inline const std::string& GetLiveEventsRequest::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetLiveEventsRequest.names)
  return _internal_names().Get(index);
}
inline std::string* GetLiveEventsRequest::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.GetLiveEventsRequest.names)
  return _internal_mutable_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetLiveEventsRequest::set_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:satori.api.GetLiveEventsRequest.names)
}
template <typename Arg_, typename... Args_>
inline void GetLiveEventsRequest::add_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:satori.api.GetLiveEventsRequest.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLiveEventsRequest::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.GetLiveEventsRequest.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLiveEventsRequest::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.GetLiveEventsRequest.names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetLiveEventsRequest::_internal_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetLiveEventsRequest::_internal_mutable_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IdentifyRequest

// string id = 1;
inline void IdentifyRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& IdentifyRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.IdentifyRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IdentifyRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.IdentifyRequest.id)
}
inline std::string* IdentifyRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.IdentifyRequest.id)
  return _s;
}
inline const std::string& IdentifyRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void IdentifyRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* IdentifyRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* IdentifyRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.IdentifyRequest.id)
  return _impl_.id_.Release();
}
inline void IdentifyRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.IdentifyRequest.id)
}

// map<string, string> default = 2;
inline int IdentifyRequest::_internal_default__size() const {
  return _internal_default_().size();
}
inline int IdentifyRequest::default__size() const {
  return _internal_default__size();
}
inline void IdentifyRequest::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& IdentifyRequest::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default__.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& IdentifyRequest::default_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.IdentifyRequest.default)
  return _internal_default_();
}
inline ::google::protobuf::Map<std::string, std::string>* IdentifyRequest::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default__.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* IdentifyRequest::mutable_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.IdentifyRequest.default)
  return _internal_mutable_default_();
}

// map<string, string> custom = 3;
inline int IdentifyRequest::_internal_custom_size() const {
  return _internal_custom().size();
}
inline int IdentifyRequest::custom_size() const {
  return _internal_custom_size();
}
inline void IdentifyRequest::clear_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& IdentifyRequest::_internal_custom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& IdentifyRequest::custom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.IdentifyRequest.custom)
  return _internal_custom();
}
inline ::google::protobuf::Map<std::string, std::string>* IdentifyRequest::_internal_mutable_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* IdentifyRequest::mutable_custom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.IdentifyRequest.custom)
  return _internal_mutable_custom();
}

// -------------------------------------------------------------------

// LiveEvent

// string name = 1;
inline void LiveEvent::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& LiveEvent::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LiveEvent::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.name)
}
inline std::string* LiveEvent::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:satori.api.LiveEvent.name)
  return _s;
}
inline const std::string& LiveEvent::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void LiveEvent::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* LiveEvent::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* LiveEvent::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.LiveEvent.name)
  return _impl_.name_.Release();
}
inline void LiveEvent::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.LiveEvent.name)
}

// string description = 2;
inline void LiveEvent::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& LiveEvent::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LiveEvent::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.description)
}
inline std::string* LiveEvent::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:satori.api.LiveEvent.description)
  return _s;
}
inline const std::string& LiveEvent::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void LiveEvent::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* LiveEvent::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* LiveEvent::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.LiveEvent.description)
  return _impl_.description_.Release();
}
inline void LiveEvent::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.LiveEvent.description)
}

// string value = 3;
inline void LiveEvent::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& LiveEvent::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LiveEvent::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.value)
}
inline std::string* LiveEvent::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:satori.api.LiveEvent.value)
  return _s;
}
inline const std::string& LiveEvent::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void LiveEvent::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* LiveEvent::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* LiveEvent::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.LiveEvent.value)
  return _impl_.value_.Release();
}
inline void LiveEvent::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.LiveEvent.value)
}

// int64 active_start_time_sec = 4;
inline void LiveEvent::clear_active_start_time_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_start_time_sec_ = ::int64_t{0};
}
inline ::int64_t LiveEvent::active_start_time_sec() const {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.active_start_time_sec)
  return _internal_active_start_time_sec();
}
inline void LiveEvent::set_active_start_time_sec(::int64_t value) {
  _internal_set_active_start_time_sec(value);
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.active_start_time_sec)
}
inline ::int64_t LiveEvent::_internal_active_start_time_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_start_time_sec_;
}
inline void LiveEvent::_internal_set_active_start_time_sec(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_start_time_sec_ = value;
}

// int64 active_end_time_sec = 5;
inline void LiveEvent::clear_active_end_time_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_end_time_sec_ = ::int64_t{0};
}
inline ::int64_t LiveEvent::active_end_time_sec() const {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.active_end_time_sec)
  return _internal_active_end_time_sec();
}
inline void LiveEvent::set_active_end_time_sec(::int64_t value) {
  _internal_set_active_end_time_sec(value);
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.active_end_time_sec)
}
inline ::int64_t LiveEvent::_internal_active_end_time_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_end_time_sec_;
}
inline void LiveEvent::_internal_set_active_end_time_sec(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_end_time_sec_ = value;
}

// string id = 6;
inline void LiveEvent::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& LiveEvent::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LiveEvent::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.id)
}
inline std::string* LiveEvent::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.LiveEvent.id)
  return _s;
}
inline const std::string& LiveEvent::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void LiveEvent::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* LiveEvent::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* LiveEvent::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.LiveEvent.id)
  return _impl_.id_.Release();
}
inline void LiveEvent::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.LiveEvent.id)
}

// int64 start_time_sec = 7;
inline void LiveEvent::clear_start_time_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_sec_ = ::int64_t{0};
}
inline ::int64_t LiveEvent::start_time_sec() const {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.start_time_sec)
  return _internal_start_time_sec();
}
inline void LiveEvent::set_start_time_sec(::int64_t value) {
  _internal_set_start_time_sec(value);
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.start_time_sec)
}
inline ::int64_t LiveEvent::_internal_start_time_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_time_sec_;
}
inline void LiveEvent::_internal_set_start_time_sec(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_sec_ = value;
}

// int64 end_time_sec = 8;
inline void LiveEvent::clear_end_time_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_sec_ = ::int64_t{0};
}
inline ::int64_t LiveEvent::end_time_sec() const {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.end_time_sec)
  return _internal_end_time_sec();
}
inline void LiveEvent::set_end_time_sec(::int64_t value) {
  _internal_set_end_time_sec(value);
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.end_time_sec)
}
inline ::int64_t LiveEvent::_internal_end_time_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_time_sec_;
}
inline void LiveEvent::_internal_set_end_time_sec(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_sec_ = value;
}

// int64 duration_sec = 9;
inline void LiveEvent::clear_duration_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_sec_ = ::int64_t{0};
}
inline ::int64_t LiveEvent::duration_sec() const {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.duration_sec)
  return _internal_duration_sec();
}
inline void LiveEvent::set_duration_sec(::int64_t value) {
  _internal_set_duration_sec(value);
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.duration_sec)
}
inline ::int64_t LiveEvent::_internal_duration_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_sec_;
}
inline void LiveEvent::_internal_set_duration_sec(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_sec_ = value;
}

// string reset_cron = 10;
inline void LiveEvent::clear_reset_cron() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cron_.ClearToEmpty();
}
inline const std::string& LiveEvent::reset_cron() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.LiveEvent.reset_cron)
  return _internal_reset_cron();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LiveEvent::set_reset_cron(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cron_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.LiveEvent.reset_cron)
}
inline std::string* LiveEvent::mutable_reset_cron() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reset_cron();
  // @@protoc_insertion_point(field_mutable:satori.api.LiveEvent.reset_cron)
  return _s;
}
inline const std::string& LiveEvent::_internal_reset_cron() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reset_cron_.Get();
}
inline void LiveEvent::_internal_set_reset_cron(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cron_.Set(value, GetArena());
}
inline std::string* LiveEvent::_internal_mutable_reset_cron() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reset_cron_.Mutable( GetArena());
}
inline std::string* LiveEvent::release_reset_cron() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.LiveEvent.reset_cron)
  return _impl_.reset_cron_.Release();
}
inline void LiveEvent::set_allocated_reset_cron(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reset_cron_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reset_cron_.IsDefault()) {
          _impl_.reset_cron_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.LiveEvent.reset_cron)
}

// -------------------------------------------------------------------

// LiveEventList

// repeated .satori.api.LiveEvent live_events = 1;
inline int LiveEventList::_internal_live_events_size() const {
  return _internal_live_events().size();
}
inline int LiveEventList::live_events_size() const {
  return _internal_live_events_size();
}
inline void LiveEventList::clear_live_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.live_events_.Clear();
}
inline ::satori::api::LiveEvent* LiveEventList::mutable_live_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.LiveEventList.live_events)
  return _internal_mutable_live_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>* LiveEventList::mutable_live_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.LiveEventList.live_events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_live_events();
}
inline const ::satori::api::LiveEvent& LiveEventList::live_events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.LiveEventList.live_events)
  return _internal_live_events().Get(index);
}
inline ::satori::api::LiveEvent* LiveEventList::add_live_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::satori::api::LiveEvent* _add = _internal_mutable_live_events()->Add();
  // @@protoc_insertion_point(field_add:satori.api.LiveEventList.live_events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>& LiveEventList::live_events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.LiveEventList.live_events)
  return _internal_live_events();
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>&
LiveEventList::_internal_live_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.live_events_;
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::LiveEvent>*
LiveEventList::_internal_mutable_live_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.live_events_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Properties

// map<string, string> default = 1;
inline int Properties::_internal_default__size() const {
  return _internal_default_().size();
}
inline int Properties::default__size() const {
  return _internal_default__size();
}
inline void Properties::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Properties::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default__.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Properties::default_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.Properties.default)
  return _internal_default_();
}
inline ::google::protobuf::Map<std::string, std::string>* Properties::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default__.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Properties::mutable_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.Properties.default)
  return _internal_mutable_default_();
}

// map<string, string> computed = 2;
inline int Properties::_internal_computed_size() const {
  return _internal_computed().size();
}
inline int Properties::computed_size() const {
  return _internal_computed_size();
}
inline void Properties::clear_computed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.computed_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Properties::_internal_computed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.computed_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Properties::computed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.Properties.computed)
  return _internal_computed();
}
inline ::google::protobuf::Map<std::string, std::string>* Properties::_internal_mutable_computed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.computed_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Properties::mutable_computed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.Properties.computed)
  return _internal_mutable_computed();
}

// map<string, string> custom = 3;
inline int Properties::_internal_custom_size() const {
  return _internal_custom().size();
}
inline int Properties::custom_size() const {
  return _internal_custom_size();
}
inline void Properties::clear_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Properties::_internal_custom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Properties::custom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.Properties.custom)
  return _internal_custom();
}
inline ::google::protobuf::Map<std::string, std::string>* Properties::_internal_mutable_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Properties::mutable_custom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.Properties.custom)
  return _internal_mutable_custom();
}

// -------------------------------------------------------------------

// Session

// string token = 1;
inline void Session::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& Session::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Session.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Session::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Session.token)
}
inline std::string* Session::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:satori.api.Session.token)
  return _s;
}
inline const std::string& Session::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void Session::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* Session::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* Session::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Session.token)
  return _impl_.token_.Release();
}
inline void Session::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Session.token)
}

// string refresh_token = 2;
inline void Session::clear_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.ClearToEmpty();
}
inline const std::string& Session::refresh_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Session.refresh_token)
  return _internal_refresh_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Session::set_refresh_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Session.refresh_token)
}
inline std::string* Session::mutable_refresh_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_refresh_token();
  // @@protoc_insertion_point(field_mutable:satori.api.Session.refresh_token)
  return _s;
}
inline const std::string& Session::_internal_refresh_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refresh_token_.Get();
}
inline void Session::_internal_set_refresh_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.Set(value, GetArena());
}
inline std::string* Session::_internal_mutable_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.refresh_token_.Mutable( GetArena());
}
inline std::string* Session::release_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Session.refresh_token)
  return _impl_.refresh_token_.Release();
}
inline void Session::set_allocated_refresh_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.refresh_token_.IsDefault()) {
          _impl_.refresh_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Session.refresh_token)
}

// .satori.api.Properties properties = 3;
inline bool Session::has_properties() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.properties_ != nullptr);
  return value;
}
inline void Session::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.properties_ != nullptr) _impl_.properties_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::satori::api::Properties& Session::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::satori::api::Properties* p = _impl_.properties_;
  return p != nullptr ? *p : reinterpret_cast<const ::satori::api::Properties&>(::satori::api::_Properties_default_instance_);
}
inline const ::satori::api::Properties& Session::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Session.properties)
  return _internal_properties();
}
inline void Session::unsafe_arena_set_allocated_properties(::satori::api::Properties* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.properties_);
  }
  _impl_.properties_ = reinterpret_cast<::satori::api::Properties*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:satori.api.Session.properties)
}
inline ::satori::api::Properties* Session::release_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::satori::api::Properties* released = _impl_.properties_;
  _impl_.properties_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::satori::api::Properties* Session::unsafe_arena_release_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Session.properties)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::satori::api::Properties* temp = _impl_.properties_;
  _impl_.properties_ = nullptr;
  return temp;
}
inline ::satori::api::Properties* Session::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.properties_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::satori::api::Properties>(GetArena());
    _impl_.properties_ = reinterpret_cast<::satori::api::Properties*>(p);
  }
  return _impl_.properties_;
}
inline ::satori::api::Properties* Session::mutable_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::satori::api::Properties* _msg = _internal_mutable_properties();
  // @@protoc_insertion_point(field_mutable:satori.api.Session.properties)
  return _msg;
}
inline void Session::set_allocated_properties(::satori::api::Properties* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.properties_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.properties_ = reinterpret_cast<::satori::api::Properties*>(value);
  // @@protoc_insertion_point(field_set_allocated:satori.api.Session.properties)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdatePropertiesRequest

// map<string, string> default = 1;
inline int UpdatePropertiesRequest::_internal_default__size() const {
  return _internal_default_().size();
}
inline int UpdatePropertiesRequest::default__size() const {
  return _internal_default__size();
}
inline void UpdatePropertiesRequest::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdatePropertiesRequest::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default__.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdatePropertiesRequest::default_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.UpdatePropertiesRequest.default)
  return _internal_default_();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdatePropertiesRequest::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default__.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdatePropertiesRequest::mutable_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.UpdatePropertiesRequest.default)
  return _internal_mutable_default_();
}

// map<string, string> custom = 2;
inline int UpdatePropertiesRequest::_internal_custom_size() const {
  return _internal_custom().size();
}
inline int UpdatePropertiesRequest::custom_size() const {
  return _internal_custom_size();
}
inline void UpdatePropertiesRequest::clear_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdatePropertiesRequest::_internal_custom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdatePropertiesRequest::custom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.UpdatePropertiesRequest.custom)
  return _internal_custom();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdatePropertiesRequest::_internal_mutable_custom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdatePropertiesRequest::mutable_custom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.UpdatePropertiesRequest.custom)
  return _internal_mutable_custom();
}

// .google.protobuf.BoolValue recompute = 3;
inline bool UpdatePropertiesRequest::has_recompute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.recompute_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& UpdatePropertiesRequest::_internal_recompute() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::BoolValue* p = _impl_.recompute_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& UpdatePropertiesRequest::recompute() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.UpdatePropertiesRequest.recompute)
  return _internal_recompute();
}
inline void UpdatePropertiesRequest::unsafe_arena_set_allocated_recompute(::google::protobuf::BoolValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.recompute_);
  }
  _impl_.recompute_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:satori.api.UpdatePropertiesRequest.recompute)
}
inline ::google::protobuf::BoolValue* UpdatePropertiesRequest::release_recompute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::BoolValue* released = _impl_.recompute_;
  _impl_.recompute_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::BoolValue* UpdatePropertiesRequest::unsafe_arena_release_recompute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.UpdatePropertiesRequest.recompute)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::BoolValue* temp = _impl_.recompute_;
  _impl_.recompute_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* UpdatePropertiesRequest::_internal_mutable_recompute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.recompute_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::BoolValue>(GetArena());
    _impl_.recompute_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.recompute_;
}
inline ::google::protobuf::BoolValue* UpdatePropertiesRequest::mutable_recompute() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::BoolValue* _msg = _internal_mutable_recompute();
  // @@protoc_insertion_point(field_mutable:satori.api.UpdatePropertiesRequest.recompute)
  return _msg;
}
inline void UpdatePropertiesRequest::set_allocated_recompute(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.recompute_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.recompute_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:satori.api.UpdatePropertiesRequest.recompute)
}

// -------------------------------------------------------------------

// GetMessageListRequest

// int32 limit = 1;
inline void GetMessageListRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t GetMessageListRequest::limit() const {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListRequest.limit)
  return _internal_limit();
}
inline void GetMessageListRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:satori.api.GetMessageListRequest.limit)
}
inline ::int32_t GetMessageListRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetMessageListRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// bool forward = 2;
inline void GetMessageListRequest::clear_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_ = false;
}
inline bool GetMessageListRequest::forward() const {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListRequest.forward)
  return _internal_forward();
}
inline void GetMessageListRequest::set_forward(bool value) {
  _internal_set_forward(value);
  // @@protoc_insertion_point(field_set:satori.api.GetMessageListRequest.forward)
}
inline bool GetMessageListRequest::_internal_forward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forward_;
}
inline void GetMessageListRequest::_internal_set_forward(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forward_ = value;
}

// string cursor = 3;
inline void GetMessageListRequest::clear_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_.ClearToEmpty();
}
inline const std::string& GetMessageListRequest::cursor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListRequest.cursor)
  return _internal_cursor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMessageListRequest::set_cursor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.GetMessageListRequest.cursor)
}
inline std::string* GetMessageListRequest::mutable_cursor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cursor();
  // @@protoc_insertion_point(field_mutable:satori.api.GetMessageListRequest.cursor)
  return _s;
}
inline const std::string& GetMessageListRequest::_internal_cursor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cursor_.Get();
}
inline void GetMessageListRequest::_internal_set_cursor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_.Set(value, GetArena());
}
inline std::string* GetMessageListRequest::_internal_mutable_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cursor_.Mutable( GetArena());
}
inline std::string* GetMessageListRequest::release_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.GetMessageListRequest.cursor)
  return _impl_.cursor_.Release();
}
inline void GetMessageListRequest::set_allocated_cursor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cursor_.IsDefault()) {
          _impl_.cursor_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.GetMessageListRequest.cursor)
}

// -------------------------------------------------------------------

// GetMessageListResponse

// repeated .satori.api.Message messages = 1;
inline int GetMessageListResponse::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int GetMessageListResponse::messages_size() const {
  return _internal_messages_size();
}
inline void GetMessageListResponse::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline ::satori::api::Message* GetMessageListResponse::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:satori.api.GetMessageListResponse.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Message>* GetMessageListResponse::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:satori.api.GetMessageListResponse.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::satori::api::Message& GetMessageListResponse::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListResponse.messages)
  return _internal_messages().Get(index);
}
inline ::satori::api::Message* GetMessageListResponse::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::satori::api::Message* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:satori.api.GetMessageListResponse.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Message>& GetMessageListResponse::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:satori.api.GetMessageListResponse.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::satori::api::Message>&
GetMessageListResponse::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::satori::api::Message>*
GetMessageListResponse::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// string next_cursor = 2;
inline void GetMessageListResponse::clear_next_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cursor_.ClearToEmpty();
}
inline const std::string& GetMessageListResponse::next_cursor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListResponse.next_cursor)
  return _internal_next_cursor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMessageListResponse::set_next_cursor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cursor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.GetMessageListResponse.next_cursor)
}
inline std::string* GetMessageListResponse::mutable_next_cursor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_next_cursor();
  // @@protoc_insertion_point(field_mutable:satori.api.GetMessageListResponse.next_cursor)
  return _s;
}
inline const std::string& GetMessageListResponse::_internal_next_cursor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_cursor_.Get();
}
inline void GetMessageListResponse::_internal_set_next_cursor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cursor_.Set(value, GetArena());
}
inline std::string* GetMessageListResponse::_internal_mutable_next_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.next_cursor_.Mutable( GetArena());
}
inline std::string* GetMessageListResponse::release_next_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.GetMessageListResponse.next_cursor)
  return _impl_.next_cursor_.Release();
}
inline void GetMessageListResponse::set_allocated_next_cursor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_cursor_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.next_cursor_.IsDefault()) {
          _impl_.next_cursor_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.GetMessageListResponse.next_cursor)
}

// string prev_cursor = 3;
inline void GetMessageListResponse::clear_prev_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_cursor_.ClearToEmpty();
}
inline const std::string& GetMessageListResponse::prev_cursor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListResponse.prev_cursor)
  return _internal_prev_cursor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMessageListResponse::set_prev_cursor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_cursor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.GetMessageListResponse.prev_cursor)
}
inline std::string* GetMessageListResponse::mutable_prev_cursor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prev_cursor();
  // @@protoc_insertion_point(field_mutable:satori.api.GetMessageListResponse.prev_cursor)
  return _s;
}
inline const std::string& GetMessageListResponse::_internal_prev_cursor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_cursor_.Get();
}
inline void GetMessageListResponse::_internal_set_prev_cursor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_cursor_.Set(value, GetArena());
}
inline std::string* GetMessageListResponse::_internal_mutable_prev_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.prev_cursor_.Mutable( GetArena());
}
inline std::string* GetMessageListResponse::release_prev_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.GetMessageListResponse.prev_cursor)
  return _impl_.prev_cursor_.Release();
}
inline void GetMessageListResponse::set_allocated_prev_cursor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_cursor_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prev_cursor_.IsDefault()) {
          _impl_.prev_cursor_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.GetMessageListResponse.prev_cursor)
}

// string cacheable_cursor = 4;
inline void GetMessageListResponse::clear_cacheable_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cacheable_cursor_.ClearToEmpty();
}
inline const std::string& GetMessageListResponse::cacheable_cursor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.GetMessageListResponse.cacheable_cursor)
  return _internal_cacheable_cursor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMessageListResponse::set_cacheable_cursor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cacheable_cursor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.GetMessageListResponse.cacheable_cursor)
}
inline std::string* GetMessageListResponse::mutable_cacheable_cursor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cacheable_cursor();
  // @@protoc_insertion_point(field_mutable:satori.api.GetMessageListResponse.cacheable_cursor)
  return _s;
}
inline const std::string& GetMessageListResponse::_internal_cacheable_cursor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cacheable_cursor_.Get();
}
inline void GetMessageListResponse::_internal_set_cacheable_cursor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cacheable_cursor_.Set(value, GetArena());
}
inline std::string* GetMessageListResponse::_internal_mutable_cacheable_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cacheable_cursor_.Mutable( GetArena());
}
inline std::string* GetMessageListResponse::release_cacheable_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.GetMessageListResponse.cacheable_cursor)
  return _impl_.cacheable_cursor_.Release();
}
inline void GetMessageListResponse::set_allocated_cacheable_cursor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cacheable_cursor_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cacheable_cursor_.IsDefault()) {
          _impl_.cacheable_cursor_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.GetMessageListResponse.cacheable_cursor)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Message

// string schedule_id = 1;
inline void Message::clear_schedule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schedule_id_.ClearToEmpty();
}
inline const std::string& Message::schedule_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Message.schedule_id)
  return _internal_schedule_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_schedule_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schedule_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Message.schedule_id)
}
inline std::string* Message::mutable_schedule_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_schedule_id();
  // @@protoc_insertion_point(field_mutable:satori.api.Message.schedule_id)
  return _s;
}
inline const std::string& Message::_internal_schedule_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schedule_id_.Get();
}
inline void Message::_internal_set_schedule_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schedule_id_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_schedule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.schedule_id_.Mutable( GetArena());
}
inline std::string* Message::release_schedule_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Message.schedule_id)
  return _impl_.schedule_id_.Release();
}
inline void Message::set_allocated_schedule_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schedule_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.schedule_id_.IsDefault()) {
          _impl_.schedule_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Message.schedule_id)
}

// int64 send_time = 2;
inline void Message::clear_send_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_time_ = ::int64_t{0};
}
inline ::int64_t Message::send_time() const {
  // @@protoc_insertion_point(field_get:satori.api.Message.send_time)
  return _internal_send_time();
}
inline void Message::set_send_time(::int64_t value) {
  _internal_set_send_time(value);
  // @@protoc_insertion_point(field_set:satori.api.Message.send_time)
}
inline ::int64_t Message::_internal_send_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_time_;
}
inline void Message::_internal_set_send_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_time_ = value;
}

// map<string, string> metadata = 3;
inline int Message::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Message::metadata_size() const {
  return _internal_metadata_size();
}
inline void Message::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Message::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Message::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:satori.api.Message.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Message::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Message::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:satori.api.Message.metadata)
  return _internal_mutable_metadata();
}

// int64 create_time = 4;
inline void Message::clear_create_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = ::int64_t{0};
}
inline ::int64_t Message::create_time() const {
  // @@protoc_insertion_point(field_get:satori.api.Message.create_time)
  return _internal_create_time();
}
inline void Message::set_create_time(::int64_t value) {
  _internal_set_create_time(value);
  // @@protoc_insertion_point(field_set:satori.api.Message.create_time)
}
inline ::int64_t Message::_internal_create_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_time_;
}
inline void Message::_internal_set_create_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = value;
}

// int64 update_time = 5;
inline void Message::clear_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_time_ = ::int64_t{0};
}
inline ::int64_t Message::update_time() const {
  // @@protoc_insertion_point(field_get:satori.api.Message.update_time)
  return _internal_update_time();
}
inline void Message::set_update_time(::int64_t value) {
  _internal_set_update_time(value);
  // @@protoc_insertion_point(field_set:satori.api.Message.update_time)
}
inline ::int64_t Message::_internal_update_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.update_time_;
}
inline void Message::_internal_set_update_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_time_ = value;
}

// int64 read_time = 6;
inline void Message::clear_read_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_time_ = ::int64_t{0};
}
inline ::int64_t Message::read_time() const {
  // @@protoc_insertion_point(field_get:satori.api.Message.read_time)
  return _internal_read_time();
}
inline void Message::set_read_time(::int64_t value) {
  _internal_set_read_time(value);
  // @@protoc_insertion_point(field_set:satori.api.Message.read_time)
}
inline ::int64_t Message::_internal_read_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.read_time_;
}
inline void Message::_internal_set_read_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_time_ = value;
}

// int64 consume_time = 7;
inline void Message::clear_consume_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.consume_time_ = ::int64_t{0};
}
inline ::int64_t Message::consume_time() const {
  // @@protoc_insertion_point(field_get:satori.api.Message.consume_time)
  return _internal_consume_time();
}
inline void Message::set_consume_time(::int64_t value) {
  _internal_set_consume_time(value);
  // @@protoc_insertion_point(field_set:satori.api.Message.consume_time)
}
inline ::int64_t Message::_internal_consume_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.consume_time_;
}
inline void Message::_internal_set_consume_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.consume_time_ = value;
}

// string text = 8;
inline void Message::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
}
inline const std::string& Message::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Message.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Message.text)
}
inline std::string* Message::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:satori.api.Message.text)
  return _s;
}
inline const std::string& Message::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void Message::_internal_set_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* Message::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Message.text)
  return _impl_.text_.Release();
}
inline void Message::set_allocated_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.text_.IsDefault()) {
          _impl_.text_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Message.text)
}

// string id = 9;
inline void Message::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Message::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Message.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Message.id)
}
inline std::string* Message::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.Message.id)
  return _s;
}
inline const std::string& Message::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Message::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Message::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Message.id)
  return _impl_.id_.Release();
}
inline void Message::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Message.id)
}

// string title = 10;
inline void Message::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& Message::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Message.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Message.title)
}
inline std::string* Message::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:satori.api.Message.title)
  return _s;
}
inline const std::string& Message::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void Message::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* Message::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Message.title)
  return _impl_.title_.Release();
}
inline void Message::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Message.title)
}

// string image_url = 11;
inline void Message::clear_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.ClearToEmpty();
}
inline const std::string& Message::image_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.Message.image_url)
  return _internal_image_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_image_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.Message.image_url)
}
inline std::string* Message::mutable_image_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image_url();
  // @@protoc_insertion_point(field_mutable:satori.api.Message.image_url)
  return _s;
}
inline const std::string& Message::_internal_image_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_url_.Get();
}
inline void Message::_internal_set_image_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_url_.Mutable( GetArena());
}
inline std::string* Message::release_image_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.Message.image_url)
  return _impl_.image_url_.Release();
}
inline void Message::set_allocated_image_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.image_url_.IsDefault()) {
          _impl_.image_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.Message.image_url)
}

// -------------------------------------------------------------------

// UpdateMessageRequest

// string id = 1;
inline void UpdateMessageRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& UpdateMessageRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.UpdateMessageRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateMessageRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.UpdateMessageRequest.id)
}
inline std::string* UpdateMessageRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.UpdateMessageRequest.id)
  return _s;
}
inline const std::string& UpdateMessageRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void UpdateMessageRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* UpdateMessageRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* UpdateMessageRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.UpdateMessageRequest.id)
  return _impl_.id_.Release();
}
inline void UpdateMessageRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.UpdateMessageRequest.id)
}

// int64 read_time = 2;
inline void UpdateMessageRequest::clear_read_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_time_ = ::int64_t{0};
}
inline ::int64_t UpdateMessageRequest::read_time() const {
  // @@protoc_insertion_point(field_get:satori.api.UpdateMessageRequest.read_time)
  return _internal_read_time();
}
inline void UpdateMessageRequest::set_read_time(::int64_t value) {
  _internal_set_read_time(value);
  // @@protoc_insertion_point(field_set:satori.api.UpdateMessageRequest.read_time)
}
inline ::int64_t UpdateMessageRequest::_internal_read_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.read_time_;
}
inline void UpdateMessageRequest::_internal_set_read_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_time_ = value;
}

// int64 consume_time = 3;
inline void UpdateMessageRequest::clear_consume_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.consume_time_ = ::int64_t{0};
}
inline ::int64_t UpdateMessageRequest::consume_time() const {
  // @@protoc_insertion_point(field_get:satori.api.UpdateMessageRequest.consume_time)
  return _internal_consume_time();
}
inline void UpdateMessageRequest::set_consume_time(::int64_t value) {
  _internal_set_consume_time(value);
  // @@protoc_insertion_point(field_set:satori.api.UpdateMessageRequest.consume_time)
}
inline ::int64_t UpdateMessageRequest::_internal_consume_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.consume_time_;
}
inline void UpdateMessageRequest::_internal_set_consume_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.consume_time_ = value;
}

// -------------------------------------------------------------------

// DeleteMessageRequest

// string id = 1;
inline void DeleteMessageRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteMessageRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:satori.api.DeleteMessageRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteMessageRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:satori.api.DeleteMessageRequest.id)
}
inline std::string* DeleteMessageRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:satori.api.DeleteMessageRequest.id)
  return _s;
}
inline const std::string& DeleteMessageRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteMessageRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteMessageRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteMessageRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:satori.api.DeleteMessageRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteMessageRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:satori.api.DeleteMessageRequest.id)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace satori


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_satori_2eproto_2epb_2eh
